// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id String @id @default(cuid())
  email String @unique
  username String @unique
  clerkId String @unique
  name String?
  image String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  //Relations
  posts Post[]
  comments Comment[]
}

model Post{
  id String @id @default(cuid())
  authorId String
  content String
  image String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  //Relations
  author User @relation(fields: [authorId], references: [id], onDelete: Cascade) //cascade: author 삭제되면 모든 post도 삭제됨
  comments Comment[]
}

model Comment{
  id String @id @default(cuid())
  content String
  authorId String
  postId String
  createdAt DateTime @default(now())

  // Relations
  author User @relation(fields: [authorId],references: [id],onDelete: Cascade)
  post Post @relation(fields: [postId],references: [id], onDelete: Cascade)

  @@index([authorId,postId]) // authorId와 postId를 합쳐서 인덱스 생성
}